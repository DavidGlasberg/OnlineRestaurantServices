{"ast":null,"code":"var _jsxFileName = \"C:\\\\\\u05DC\\u05D9\\u05DE\\u05D5\\u05D3\\u05D9\\u05DD\\\\\\u05E9\\u05E0\\u05D4 \\u05D2\\\\RestaurantProject\\\\Frontend\\\\restaurant-react\\\\src\\\\Components\\\\ReviewPage.js\",\n  _s = $RefreshSig$();\n// src/ReviewPage.js\n\n// import React, { useState } from 'react';\n\n// const ReviewPage = () => {\n//     const [reviews, setReviews] = useState([]);\n//     const [name, setName] = useState('');\n//     const [feedback, setFeedback] = useState('');\n\n//     const handleSubmit = (e) => {\n//         e.preventDefault();\n//         const newReview = { name, feedback, date: new Date().toLocaleString() };\n//         setReviews([newReview, ...reviews]);\n//         setName('');\n//         setFeedback('');\n//     };\n\n//     return (\n//         <div className=\"review-page\">\n//             <h1>Customer Reviews</h1>\n//             <form onSubmit={handleSubmit} className=\"review-form\">\n//                 <div>\n//                     <label htmlFor=\"name\">Name:</label>\n//                     <input\n//                         type=\"text\"\n//                         id=\"name\"\n//                         value={name}\n//                         onChange={(e) => setName(e.target.value)}\n//                         required\n//                     />\n//                 </div>\n//                 <div>\n//                     <label htmlFor=\"feedback\">Feedback:</label>\n//                     <textarea\n//                         id=\"feedback\"\n//                         value={feedback}\n//                         onChange={(e) => setFeedback(e.target.value)}\n//                         required\n//                     ></textarea>\n//                 </div>\n//                 <button type=\"submit\">Submit Review</button>\n//             </form>\n//             <div className=\"reviews\">\n//                 {reviews.map((review, index) => (\n//                     <div key={index} className=\"review\">\n//                         <h3>{review.name}</h3>\n//                         <p>{review.feedback}</p>\n//                         <small>{review.date}</small>\n//                     </div>\n//                 ))}\n//             </div>\n//         </div>\n//     );\n// };\n\n// export default ReviewPage;\n\n// src/ReviewPage.js\n\n// ******************************************************************************************** 2\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// const ReviewPage = () => {\n//     const [reviews, setReviews] = useState([]);\n//     const [name, setName] = useState('');\n//     const [feedback, setFeedback] = useState('');\n\n//     useEffect(() => {\n//         fetchReviews();\n//     }, []);\n\n//     const fetchReviews = async () => {\n//         const response = await axios.get('http://localhost:5000/reviews');\n//         setReviews(response.data);\n//     };\n\n//     const handleSubmit = async (e) => {\n//         e.preventDefault();\n//         const newReview = { name, feedback };\n//         await axios.post('http://localhost:5000/reviews', newReview);\n//         setName('');\n//         setFeedback('');\n//         fetchReviews();\n//     };\n\n//     return (\n//         <div className=\"review-page\">\n//             <h1>Customer Reviews</h1>\n//             <form onSubmit={handleSubmit} className=\"review-form\">\n//                 <div>\n//                     <label htmlFor=\"name\">Name:</label>\n//                     <input\n//                         type=\"text\"\n//                         id=\"name\"\n//                         value={name}\n//                         onChange={(e) => setName(e.target.value)}\n//                         required\n//                     />\n//                 </div>\n//                 <div>\n//                     <label htmlFor=\"feedback\">Feedback:</label>\n//                     <textarea\n//                         id=\"feedback\"\n//                         value={feedback}\n//                         onChange={(e) => setFeedback(e.target.value)}\n//                         required\n//                     ></textarea>\n//                 </div>\n//                 <button type=\"submit\">Submit Review</button>\n//             </form>\n//             <div className=\"reviews\">\n//                 {reviews.map((review, index) => (\n//                     <div key={index} className=\"review\">\n//                         <h3>{review.name}</h3>\n//                         <p>{review.feedback}</p>\n//                         <small>{review.date}</small>\n//                     </div>\n//                 ))}\n//             </div>\n//         </div>\n//     );\n// };\n\n// export default ReviewPage;\n\n// ******************************************************************************** 3\n// src/components/ReviewPage.js\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './ReviewPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReviewPage = () => {\n  _s();\n  const [reviews, setReviews] = useState([]);\n  const [name, setName] = useState('');\n  const [feedback, setFeedback] = useState('');\n  useEffect(() => {\n    fetchReviews();\n  }, []);\n  const fetchReviews = async () => {\n    const response = await axios.get('http://localhost:5000/reviews');\n    setReviews(response.data);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const newReview = {\n      name,\n      feedback\n    };\n    await axios.post('http://localhost:5000/reviews', newReview);\n    setName('');\n    setFeedback('');\n    fetchReviews();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"review-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Customer Reviews\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"review-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          value: name,\n          onChange: e => setName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"feedback\",\n          children: \"Feedback:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"feedback\",\n          value: feedback,\n          onChange: e => setFeedback(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit Review\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reviews\",\n      children: reviews.map((review, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"review\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: review.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: review.feedback\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: review.date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 9\n  }, this);\n};\n_s(ReviewPage, \"C6WG5RB1jJLYTLevwuDIvKcf+tQ=\");\n_c = ReviewPage;\nexport default ReviewPage;\nvar _c;\n$RefreshReg$(_c, \"ReviewPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","ReviewPage","_s","reviews","setReviews","name","setName","feedback","setFeedback","fetchReviews","response","get","data","handleSubmit","e","preventDefault","newReview","post","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","required","map","review","index","date","_c","$RefreshReg$"],"sources":["C:/לימודים/שנה ג/RestaurantProject/Frontend/restaurant-react/src/Components/ReviewPage.js"],"sourcesContent":["// src/ReviewPage.js\r\n\r\n// import React, { useState } from 'react';\r\n\r\n// const ReviewPage = () => {\r\n//     const [reviews, setReviews] = useState([]);\r\n//     const [name, setName] = useState('');\r\n//     const [feedback, setFeedback] = useState('');\r\n\r\n//     const handleSubmit = (e) => {\r\n//         e.preventDefault();\r\n//         const newReview = { name, feedback, date: new Date().toLocaleString() };\r\n//         setReviews([newReview, ...reviews]);\r\n//         setName('');\r\n//         setFeedback('');\r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"review-page\">\r\n//             <h1>Customer Reviews</h1>\r\n//             <form onSubmit={handleSubmit} className=\"review-form\">\r\n//                 <div>\r\n//                     <label htmlFor=\"name\">Name:</label>\r\n//                     <input\r\n//                         type=\"text\"\r\n//                         id=\"name\"\r\n//                         value={name}\r\n//                         onChange={(e) => setName(e.target.value)}\r\n//                         required\r\n//                     />\r\n//                 </div>\r\n//                 <div>\r\n//                     <label htmlFor=\"feedback\">Feedback:</label>\r\n//                     <textarea\r\n//                         id=\"feedback\"\r\n//                         value={feedback}\r\n//                         onChange={(e) => setFeedback(e.target.value)}\r\n//                         required\r\n//                     ></textarea>\r\n//                 </div>\r\n//                 <button type=\"submit\">Submit Review</button>\r\n//             </form>\r\n//             <div className=\"reviews\">\r\n//                 {reviews.map((review, index) => (\r\n//                     <div key={index} className=\"review\">\r\n//                         <h3>{review.name}</h3>\r\n//                         <p>{review.feedback}</p>\r\n//                         <small>{review.date}</small>\r\n//                     </div>\r\n//                 ))}\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default ReviewPage;\r\n\r\n// src/ReviewPage.js\r\n\r\n// ******************************************************************************************** 2\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n\r\n// const ReviewPage = () => {\r\n//     const [reviews, setReviews] = useState([]);\r\n//     const [name, setName] = useState('');\r\n//     const [feedback, setFeedback] = useState('');\r\n\r\n//     useEffect(() => {\r\n//         fetchReviews();\r\n//     }, []);\r\n\r\n//     const fetchReviews = async () => {\r\n//         const response = await axios.get('http://localhost:5000/reviews');\r\n//         setReviews(response.data);\r\n//     };\r\n\r\n//     const handleSubmit = async (e) => {\r\n//         e.preventDefault();\r\n//         const newReview = { name, feedback };\r\n//         await axios.post('http://localhost:5000/reviews', newReview);\r\n//         setName('');\r\n//         setFeedback('');\r\n//         fetchReviews();\r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"review-page\">\r\n//             <h1>Customer Reviews</h1>\r\n//             <form onSubmit={handleSubmit} className=\"review-form\">\r\n//                 <div>\r\n//                     <label htmlFor=\"name\">Name:</label>\r\n//                     <input\r\n//                         type=\"text\"\r\n//                         id=\"name\"\r\n//                         value={name}\r\n//                         onChange={(e) => setName(e.target.value)}\r\n//                         required\r\n//                     />\r\n//                 </div>\r\n//                 <div>\r\n//                     <label htmlFor=\"feedback\">Feedback:</label>\r\n//                     <textarea\r\n//                         id=\"feedback\"\r\n//                         value={feedback}\r\n//                         onChange={(e) => setFeedback(e.target.value)}\r\n//                         required\r\n//                     ></textarea>\r\n//                 </div>\r\n//                 <button type=\"submit\">Submit Review</button>\r\n//             </form>\r\n//             <div className=\"reviews\">\r\n//                 {reviews.map((review, index) => (\r\n//                     <div key={index} className=\"review\">\r\n//                         <h3>{review.name}</h3>\r\n//                         <p>{review.feedback}</p>\r\n//                         <small>{review.date}</small>\r\n//                     </div>\r\n//                 ))}\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default ReviewPage;\r\n\r\n// ******************************************************************************** 3\r\n// src/components/ReviewPage.js\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './ReviewPage.css';\r\n\r\nconst ReviewPage = () => {\r\n    const [reviews, setReviews] = useState([]);\r\n    const [name, setName] = useState('');\r\n    const [feedback, setFeedback] = useState('');\r\n\r\n    useEffect(() => {\r\n        fetchReviews();\r\n    }, []);\r\n\r\n    const fetchReviews = async () => {\r\n        const response = await axios.get('http://localhost:5000/reviews');\r\n        setReviews(response.data);\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const newReview = { name, feedback };\r\n        await axios.post('http://localhost:5000/reviews', newReview);\r\n        setName('');\r\n        setFeedback('');\r\n        fetchReviews();\r\n    };\r\n\r\n    return (\r\n        <div className=\"review-page\">\r\n            <h1>Customer Reviews</h1>\r\n            <form onSubmit={handleSubmit} className=\"review-form\">\r\n                <div>\r\n                    <label htmlFor=\"name\">Name:</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"name\"\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"feedback\">Feedback:</label>\r\n                    <textarea\r\n                        id=\"feedback\"\r\n                        value={feedback}\r\n                        onChange={(e) => setFeedback(e.target.value)}\r\n                        required\r\n                    ></textarea>\r\n                </div>\r\n                <button type=\"submit\">Submit Review</button>\r\n            </form>\r\n            <div className=\"reviews\">\r\n                {reviews.map((review, index) => (\r\n                    <div key={index} className=\"review\">\r\n                        <h3>{review.name}</h3>\r\n                        <p>{review.feedback}</p>\r\n                        <small>{review.date}</small>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ReviewPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}